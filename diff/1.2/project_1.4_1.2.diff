diff -Nr -U 0 release/1.4/project/manage.py release/1.2/project/manage.py
--- release/1.4/project/manage.py	1969-12-31 21:00:00.000000000 -0300
+++ release/1.2/project/manage.py	2016-06-16 03:36:26.844210459 -0300
@@ -0,0 +1,11 @@
+#!/usr/bin/env python
+from django.core.management import execute_manager
+try:
+    import settings # Assumed to be in the same directory.
+except ImportError:
+    import sys
+    sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n(If the file settings.py does indeed exist, it's causing an ImportError somehow.)\n" % __file__)
+    sys.exit(1)
+
+if __name__ == "__main__":
+    execute_manager(settings)
diff -Nr -U 0 release/1.4/project/settings.py release/1.2/project/settings.py
--- release/1.4/project/settings.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.2/project/settings.py	2016-06-16 03:36:26.844210459 -0300
@@ -7 +7 @@
-    # ('Your Name', 'your_email@example.com'),
+    # ('Your Name', 'your_email@domain.com'),
@@ -14 +14 @@
-        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
+        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
@@ -43 +43 @@
-# calendars according to the current locale.
+# calendars according to the current locale
@@ -46,5 +46,2 @@
-# If you set this to False, Django will not use timezone-aware datetimes.
-USE_TZ = True
-
-# Absolute filesystem path to the directory that will hold user-uploaded files.
-# Example: "/home/media/media.lawrence.com/media/"
+# Absolute path to the directory that holds media.
+# Example: "/home/media/media.lawrence.com/"
@@ -54,2 +51,2 @@
-# trailing slash.
-# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
+# trailing slash if there is a path component (optional in other cases).
+# Examples: "http://media.lawrence.com", "http://example.com/media/"
@@ -58,24 +55,4 @@
-# Absolute path to the directory static files should be collected to.
-# Don't put anything in this directory yourself; store your static files
-# in apps' "static/" subdirectories and in STATICFILES_DIRS.
-# Example: "/home/media/media.lawrence.com/static/"
-STATIC_ROOT = ''
-
-# URL prefix for static files.
-# Example: "http://media.lawrence.com/static/"
-STATIC_URL = '/static/'
-
-# Additional locations of static files
-STATICFILES_DIRS = (
-    # Put strings here, like "/home/html/static" or "C:/www/django/static".
-    # Always use forward slashes, even on Windows.
-    # Don't forget to use absolute paths, not relative paths.
-)
-
-# List of finder classes that know how to find static files in
-# various locations.
-STATICFILES_FINDERS = (
-    'django.contrib.staticfiles.finders.FileSystemFinder',
-    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
-#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
-)
+# URL prefix for admin media -- CSS, JavaScript and images. Make sure to use a
+# trailing slash.
+# Examples: "http://foo.com/media/", "/media/".
+ADMIN_MEDIA_PREFIX = '/media/'
@@ -99,2 +75,0 @@
-    # Uncomment the next line for simple clickjacking protection:
-    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
@@ -105,3 +79,0 @@
-# Python dotted path to the WSGI application used by Django's runserver.
-WSGI_APPLICATION = 'project.wsgi.application'
-
@@ -120 +91,0 @@
-    'django.contrib.staticfiles',
@@ -123,2 +93,0 @@
-    # Uncomment the next line to enable admin documentation:
-    # 'django.contrib.admindocs',
@@ -126,29 +94,0 @@
-
-# A sample logging configuration. The only tangible logging
-# performed by this configuration is to send an email to
-# the site admins on every HTTP 500 error when DEBUG=False.
-# See http://docs.djangoproject.com/en/dev/topics/logging for
-# more details on how to customize your logging configuration.
-LOGGING = {
-    'version': 1,
-    'disable_existing_loggers': False,
-    'filters': {
-        'require_debug_false': {
-            '()': 'django.utils.log.RequireDebugFalse'
-        }
-    },
-    'handlers': {
-        'mail_admins': {
-            'level': 'ERROR',
-            'filters': ['require_debug_false'],
-            'class': 'django.utils.log.AdminEmailHandler'
-        }
-    },
-    'loggers': {
-        'django.request': {
-            'handlers': ['mail_admins'],
-            'level': 'ERROR',
-            'propagate': True,
-        },
-    }
-}
diff -Nr -U 0 release/1.4/project/urls.py release/1.2/project/urls.py
--- release/1.4/project/urls.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.2/project/urls.py	2016-06-16 03:36:26.844210459 -0300
@@ -1 +1 @@
-from django.conf.urls import patterns, include, url
+from django.conf.urls.defaults import *
@@ -8,3 +8,2 @@
-    # Examples:
-    # url(r'^$', 'project.views.home', name='home'),
-    # url(r'^project/', include('project.foo.urls')),
+    # Example:
+    # (r'^project/', include('project.foo.urls')),
@@ -12,2 +11,3 @@
-    # Uncomment the admin/doc line below to enable admin documentation:
-    # url(r'^admin/doc/', include('django.contrib.admindocs.urls')),
+    # Uncomment the admin/doc line below and add 'django.contrib.admindocs' 
+    # to INSTALLED_APPS to enable admin documentation:
+    # (r'^admin/doc/', include('django.contrib.admindocs.urls')),
@@ -16 +16 @@
-    # url(r'^admin/', include(admin.site.urls)),
+    # (r'^admin/', include(admin.site.urls)),
diff -Nr -U 0 release/1.4/project/wsgi.py release/1.2/project/wsgi.py
--- release/1.4/project/wsgi.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.2/project/wsgi.py	1969-12-31 21:00:00.000000000 -0300
@@ -1,28 +0,0 @@
-"""
-WSGI config for project project.
-
-This module contains the WSGI application used by Django's development server
-and any production WSGI deployments. It should expose a module-level variable
-named ``application``. Django's ``runserver`` and ``runfcgi`` commands discover
-this application via the ``WSGI_APPLICATION`` setting.
-
-Usually you will have the standard Django WSGI application here, but it also
-might make sense to replace the whole Django WSGI application with a custom one
-that later delegates to the Django one. For example, you could introduce WSGI
-middleware here, or combine a Django application with an application of another
-framework.
-
-"""
-import os
-
-os.environ.setdefault("DJANGO_SETTINGS_MODULE", "project.settings")
-
-# This application object is used by any WSGI server configured to use this
-# file. This includes Django's development server, if the WSGI_APPLICATION
-# setting points here.
-from django.core.wsgi import get_wsgi_application
-application = get_wsgi_application()
-
-# Apply WSGI middleware here.
-# from helloworld.wsgi import HelloWorldApplication
-# application = HelloWorldApplication(application)
