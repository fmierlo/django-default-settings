diff -Nr -U 0 release/1.3/project/manage.py release/1.5/project/manage.py
--- release/1.3/project/manage.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.5/project/manage.py	1969-12-31 21:00:00.000000000 -0300
@@ -1,14 +0,0 @@
-#!/usr/bin/env python
-from django.core.management import execute_manager
-import imp
-try:
-    imp.find_module('settings') # Assumed to be in the same directory.
-except ImportError:
-    import sys
-    sys.stderr.write("Error: Can't find the file 'settings.py' in the directory containing %r. It appears you've customized things.\nYou'll have to run django-admin.py, passing it your settings module.\n" % __file__)
-    sys.exit(1)
-
-import settings
-
-if __name__ == "__main__":
-    execute_manager(settings)
diff -Nr -U 0 release/1.3/project/settings.py release/1.5/project/settings.py
--- release/1.3/project/settings.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.5/project/settings.py	2016-06-16 03:36:26.844210459 -0300
@@ -14 +14 @@
-        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
+        'ENGINE': 'django.db.backends.', # Add 'postgresql_psycopg2', 'mysql', 'sqlite3' or 'oracle'.
@@ -16,4 +16,5 @@
-        'USER': '',                      # Not used with sqlite3.
-        'PASSWORD': '',                  # Not used with sqlite3.
-        'HOST': '',                      # Set to empty string for localhost. Not used with sqlite3.
-        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
+        # The following settings are not used with sqlite3:
+        'USER': '',
+        'PASSWORD': '',
+        'HOST': '',                      # Empty for localhost through domain sockets or '127.0.0.1' for localhost through TCP.
+        'PORT': '',                      # Set to empty string for default.
@@ -22,0 +24,4 @@
+# Hosts/domain names that are valid for this site; required if DEBUG is False
+# See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts
+ALLOWED_HOSTS = []
+
@@ -26,4 +31 @@
-# On Unix systems, a value of None will cause Django to use the same
-# timezone as the operating system.
-# If running in a Windows environment this must be set to the same as your
-# system time zone.
+# In a Windows environment this must be set to your system time zone.
@@ -43 +45 @@
-# calendars according to the current locale
+# calendars according to the current locale.
@@ -45,0 +48,3 @@
+# If you set this to False, Django will not use timezone-aware datetimes.
+USE_TZ = True
+
@@ -47 +52 @@
-# Example: "/home/media/media.lawrence.com/media/"
+# Example: "/var/www/example.com/media/"
@@ -52 +57 @@
-# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
+# Examples: "http://example.com/media/", "http://media.example.com/"
@@ -58 +63 @@
-# Example: "/home/media/media.lawrence.com/static/"
+# Example: "/var/www/example.com/static/"
@@ -62 +67 @@
-# Example: "http://media.lawrence.com/static/"
+# Example: "http://example.com/static/", "http://static.example.com/"
@@ -65,5 +69,0 @@
-# URL prefix for admin static files -- CSS, JavaScript and images.
-# Make sure to use a trailing slash.
-# Examples: "http://foo.com/static/admin/", "/static/admin/".
-ADMIN_MEDIA_PREFIX = '/static/admin/'
-
@@ -100,0 +101,2 @@
+    # Uncomment the next line for simple clickjacking protection:
+    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',
@@ -104,0 +107,3 @@
+# Python dotted path to the WSGI application used by Django's runserver.
+WSGI_APPLICATION = 'project.wsgi.application'
+
@@ -126 +131 @@
-# the site admins on every HTTP 500 error.
+# the site admins on every HTTP 500 error when DEBUG=False.
@@ -131,0 +137,5 @@
+    'filters': {
+        'require_debug_false': {
+            '()': 'django.utils.log.RequireDebugFalse'
+        }
+    },
@@ -134,0 +145 @@
+            'filters': ['require_debug_false'],
diff -Nr -U 0 release/1.3/project/urls.py release/1.5/project/urls.py
--- release/1.3/project/urls.py	2016-06-16 03:36:26.844210459 -0300
+++ release/1.5/project/urls.py	2016-06-16 03:36:26.844210459 -0300
@@ -1 +1 @@
-from django.conf.urls.defaults import patterns, include, url
+from django.conf.urls import patterns, include, url
diff -Nr -U 0 release/1.3/project/wsgi.py release/1.5/project/wsgi.py
--- release/1.3/project/wsgi.py	1969-12-31 21:00:00.000000000 -0300
+++ release/1.5/project/wsgi.py	2016-06-16 03:36:26.844210459 -0300
@@ -0,0 +1,32 @@
+"""
+WSGI config for project project.
+
+This module contains the WSGI application used by Django's development server
+and any production WSGI deployments. It should expose a module-level variable
+named ``application``. Django's ``runserver`` and ``runfcgi`` commands discover
+this application via the ``WSGI_APPLICATION`` setting.
+
+Usually you will have the standard Django WSGI application here, but it also
+might make sense to replace the whole Django WSGI application with a custom one
+that later delegates to the Django one. For example, you could introduce WSGI
+middleware here, or combine a Django application with an application of another
+framework.
+
+"""
+import os
+
+# We defer to a DJANGO_SETTINGS_MODULE already in the environment. This breaks
+# if running multiple sites in the same mod_wsgi process. To fix this, use
+# mod_wsgi daemon mode with each site in its own daemon process, or use
+# os.environ["DJANGO_SETTINGS_MODULE"] = "project.settings"
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "project.settings")
+
+# This application object is used by any WSGI server configured to use this
+# file. This includes Django's development server, if the WSGI_APPLICATION
+# setting points here.
+from django.core.wsgi import get_wsgi_application
+application = get_wsgi_application()
+
+# Apply WSGI middleware here.
+# from helloworld.wsgi import HelloWorldApplication
+# application = HelloWorldApplication(application)
